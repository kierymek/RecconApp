[{"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\index.js":"1","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\App.jsx":"2","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\context\\ReconsContext.js":"3","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\UserPanel.jsx":"4","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\RegisterPage.jsx":"5","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\Home.jsx":"6","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\apis\\ReconsFinder.js":"7","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Register.jsx":"8","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\NoAccount.jsx":"9","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Header.jsx":"10","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\LogUser.jsx":"11","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Cluster.jsx":"12","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\FindUser.jsx":"13","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Navbar.jsx":"14","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\context\\Functions.js":"15","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\EditUser.jsx":"16","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\ClusterPanel.jsx":"17","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\AddCluster.jsx":"18","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\ClusterDetails.jsx":"19","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\AddRecon.jsx":"20","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\ReconDetails.jsx":"21"},{"size":146,"mtime":1610623764262,"results":"22","hashOfConfig":"23"},{"size":1511,"mtime":1622915952469,"results":"24","hashOfConfig":"23"},{"size":663,"mtime":1622991831478,"results":"25","hashOfConfig":"23"},{"size":7194,"mtime":1623589330793,"results":"26","hashOfConfig":"23"},{"size":217,"mtime":1620337118319,"results":"27","hashOfConfig":"23"},{"size":464,"mtime":1621728615102,"results":"28","hashOfConfig":"23"},{"size":106,"mtime":1621727142523,"results":"29","hashOfConfig":"23"},{"size":2965,"mtime":1621728627698,"results":"30","hashOfConfig":"23"},{"size":638,"mtime":1619872111341,"results":"31","hashOfConfig":"23"},{"size":513,"mtime":1621728627683,"results":"32","hashOfConfig":"23"},{"size":2550,"mtime":1621728627692,"results":"33","hashOfConfig":"23"},{"size":1505,"mtime":1622984537814,"results":"34","hashOfConfig":"23"},{"size":4899,"mtime":1622915430288,"results":"35","hashOfConfig":"23"},{"size":2219,"mtime":1621730370293,"results":"36","hashOfConfig":"23"},{"size":1102,"mtime":1621728627701,"results":"37","hashOfConfig":"23"},{"size":3878,"mtime":1622904665621,"results":"38","hashOfConfig":"23"},{"size":1501,"mtime":1622983928765,"results":"39","hashOfConfig":"23"},{"size":1983,"mtime":1623588317280,"results":"40","hashOfConfig":"23"},{"size":5424,"mtime":1623588164190,"results":"41","hashOfConfig":"23"},{"size":2367,"mtime":1623002555535,"results":"42","hashOfConfig":"23"},{"size":8901,"mtime":1623588204436,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"s6qllm",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"46"},"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\index.js",[],["94","95"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\App.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\context\\ReconsContext.js",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\UserPanel.jsx",["96","97","98","99","100"],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\RegisterPage.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\Home.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\apis\\ReconsFinder.js",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Register.jsx",["101","102","103","104"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\n\r\nconst Register = () => {\r\n  const { idHotel, idOption } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [nickname, setNickname] = useState(\"łysa pała 69\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await ReconsFinder.post(\"register\", {\r\n        firstname: name,\r\n        lastname: surname,\r\n        username: nickname,\r\n        password,\r\n        email,\r\n      });\r\n      console.log(response.data);\r\n      setSelectedClient(response.data.data);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n      if (e.response.data !== undefined) {\r\n        console.log(e.response);\r\n        const responseText = JSON.parse(e.response.request.responseText);\r\n        let response = \"\";\r\n        for (const [key, value] of Object.entries(responseText)) {\r\n          response += \"input name -> \" + key + \"\\ninput errors:  \";\r\n          for (const message of Object.values(value)) {\r\n            response += message + \"\\n\";\r\n          }\r\n          response += \"\\n\";\r\n        }\r\n        alert(response);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"font-weight-bold display-3 text-center\">\r\n        Panel rejestracji\r\n      </h1>\r\n      <br />\r\n      <div className=\"mb-2 text-left\">\r\n        <form action=\"\" onSubmit={handleRegister}>\r\n          <h2>Nowy użytkownik</h2> <br />\r\n          <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Imię</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Nazwisko</label>\r\n              <input\r\n                value={surname}\r\n                onChange={(e) => setSurname(e.target.value)}\r\n                id=\"surname\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nickname\">username</label>\r\n              <input\r\n                value={nickname}\r\n                onChange={(e) => setNickname(e.target.value)}\r\n                id=\"nickname\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">email</label>\r\n              <input\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                id=\"email\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Hasło</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                id=\"password\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-danger\">\r\n            Zarejestruj\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\NoAccount.jsx",["105"],"import React from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst NoAccount = () => {\r\n    const history = useHistory();\r\n\r\n    const handleNoAccout = async (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/register\");        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1></h1><br/>\r\n            <div>\r\n                <h2>Nie masz jeszcze konta?</h2> <br/>\r\n                <form action=\"\" onSubmit={handleNoAccout} >\r\n                <button type=\"submit\" className=\"btn btn-danger\">Rejestracja</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoAccount;\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Header.jsx",["106"],"import React from 'react'\r\nimport logo from '../images/cash.jpg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"font-weight-bold display-3 text-center\">Reckonings App</h1>\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', paddingBottom : '30px'}}>\r\n                <img src={logo} style={{width: '20%', height: 'auto'}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\LogUser.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Cluster.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\FindUser.jsx",["107","108","109"],"import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { /*useHistory,*/ useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport { getCookie } from \"../context/Functions\";\r\n//const history = useHistory();\r\n\r\nconst FindUser = ({ groupid }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstname] = useState(\"\");\r\n  const [lastName, setLastname] = useState(\"\");\r\n  const [users, setUsers] = useState(null);\r\n\r\n  async function addUserToCluster(user) {\r\n    console.log(user);\r\n    const addUserResponse = await ReconsFinder.post(\r\n      \"groups/groupmembers\",\r\n      {\r\n        groupid,\r\n        userid: user.userid,\r\n      },\r\n      {\r\n        headers: {\r\n          jwt: getCookie(\"jwt\"),\r\n        },\r\n      }\r\n    );\r\n    console.log(\"added user: \", addUserResponse);\r\n    //groupId\r\n    try {\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert(\"Bład\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    try {\r\n      const response = await ReconsFinder.get(\r\n        `/auth/search?email=${email}&firstname=${firstName}&lastname=${lastName}`,\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      if (response.data.length == 0) alert(\"Brak użytkownika\");\r\n      setUsers(\r\n        response.data.map((user) => {\r\n          return (\r\n            <div\r\n              className=\"col-sm\"\r\n              key={user.userid}\r\n              style={{ maxWidth: \"30%\" }}\r\n            >\r\n              <table className=\"table caption-top table-secondary\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Imię:</td>\r\n                    <td>{user.firstname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Nazwisko:</td>\r\n                    <td>{user.lastname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Email:</td>\r\n                    <td>{user.email}</td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <td>\r\n                      <button\r\n                        type=\"submit\"\r\n                        onClick={() => addUserToCluster(user)}\r\n                        className=\"btn btn-secondary\"\r\n                      >\r\n                        Dodaj do grupy\r\n                      </button>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert(\"Nie znaleziono użytkownika\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h1>Wyszukaj Użytkownika</h1>\r\n      <br />\r\n      <div style={{ width: \"60%\" }}>\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n          <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n            <div className=\"form-group\">\r\n              {\r\n                <input\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  size=\"50\"\r\n                  id=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Wyszukaj po emailu\"\r\n                />\r\n              }\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {\r\n                <input\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                  size=\"50\"\r\n                  id=\"firstName\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Wyszukaj po imieniu\"\r\n                />\r\n              }\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {\r\n                <input\r\n                  value={lastName}\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                  size=\"50\"\r\n                  id=\"lastName\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Wyszukaj po nazwisku\"\r\n                />\r\n              }\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Szukaj\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-warning\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n              setUsers(null);\r\n            }}\r\n          >\r\n            Ukryj wyszukanych\r\n          </button>\r\n        </form>\r\n        <p></p> {/*To nie powinno tak być*/}\r\n      </div>\r\n      <div className=\"row row-cols-3 mb-2\">{users}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUser;\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\Navbar.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\context\\Functions.js",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\EditUser.jsx",["110","111"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport { getCookie, printAlert } from \"../context/Functions\";\r\n\r\nconst EditUser = () => {\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n  //   const { idClient } = useParams();\r\n  //   const { selectedClient, setSelectedClient } = useContext(ReconsContext);\r\n  //   const { selectedReservations, setSelectedReservations } = useContext(\r\n  //     ReconsContext\r\n  //   );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ReconsFinder.get(\"/logged\", {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        setName(response.data.firstname);\r\n        setSurname(response.data.lastname);\r\n        setEmail(response.data.email);\r\n      } catch (e) {\r\n        console.log(e);\r\n        printAlert(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await ReconsFinder.put(\r\n        \"auth/logged\",\r\n        {\r\n          firstname: name,\r\n          lastname: surname,\r\n          password,\r\n          email,\r\n        },\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      document.cookie = `jwt=${response.data.jwt}`;\r\n      history.push(\"/userPanel\");\r\n    } catch (e) {\r\n      printAlert(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"font-weight-bold display-3 text-center\">\r\n        Edytuj dane użytkownika\r\n      </h1>\r\n      <br />\r\n      <div className=\"mb-2 text-left\">\r\n        <form action=\"\" onSubmit={handleUpdate}>\r\n          <h2>Wprowadź nowe dane użytkownika</h2> <br />\r\n          <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Imię</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Nazwisko</label>\r\n              <input\r\n                value={surname}\r\n                onChange={(e) => setSurname(e.target.value)}\r\n                id=\"surname\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">email</label>\r\n              <input\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                id=\"email\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Hasło</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                id=\"password\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-danger\">\r\n            Edytuj dane\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\ClusterPanel.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\AddCluster.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\ClusterDetails.jsx",["112","113","114"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport AddRecon from \"../components/AddRecon\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport FindUser from \"../components/FindUser\";\r\nimport { getCookie, printAlert } from \"../context/Functions\";\r\nimport { ReconsContext } from \"../context/ReconsContext\";\r\n\r\nconst ClusterDetails = () => {\r\n  const history = useHistory();\r\n  const { groupid } = useParams();\r\n  const [details, setDetails] = useState(\"\");\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n  const [members, setMembers] = useState(\"Ładowanie...\");\r\n  const [recons, setRecons] = useState(\"Ładowanie...\");\r\n  const { foundUsers, setSelectedRecon, setGroupMembers } =\r\n    useContext(ReconsContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ReconsFinder.get(`/groups/group/${groupid}`, {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        });\r\n        const userResponse = await ReconsFinder.get(`/auth/logged`, {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        });\r\n        const reconsResponse = await ReconsFinder.get(\r\n          `reckonings/reckonings_in_group/${groupid}`,\r\n          {\r\n            headers: {\r\n              jwt: getCookie(\"jwt\"),\r\n            },\r\n          }\r\n        );\r\n        setLoggedUser(userResponse.data);\r\n        console.log(\"recons: \", reconsResponse.data);\r\n\r\n        const recons = reconsResponse.data.map((recon) => {\r\n          return (\r\n            <tr\r\n              key={recon.reckoningid}\r\n              onClick={(e) => {\r\n                history.push(`/ReckonDetails/${recon.reckoningid}`);\r\n                setSelectedRecon(recon);\r\n              }}\r\n            >\r\n              <td>{recon.name}</td>\r\n              <td>{recon.author_detail.email}</td>\r\n              <td>{recon.deadline.split(\"T\", 1)}</td>\r\n              <td>{recon.payment_status}</td>\r\n            </tr>\r\n          );\r\n        });\r\n        setRecons(\r\n          recons.length ? (\r\n            recons\r\n          ) : (\r\n            <tr>\r\n              <td>Brak rachunków</td>\r\n            </tr>\r\n          )\r\n        );\r\n\r\n        setDetails(response.data);\r\n        console.log(response.data);\r\n        setGroupMembers(\r\n          response.data.members.filter(\r\n            (member) => member.userid !== userResponse.data.userid\r\n          )\r\n        );\r\n        console.log(\r\n          \"mapped members: \",\r\n          response.data.members.map((member) => {\r\n            if (member.userid !== userResponse.data.userid) {\r\n              return member;\r\n            }\r\n          })\r\n        );\r\n        console.log(\"członkowie: \", response.data.members);\r\n        const members = response.data.members.map((member) => {\r\n          return (\r\n            <tr key={member.userid}>\r\n              <td>{member.firstname}</td>\r\n              <td>{member.lastname}</td>\r\n              <td>{member.email}</td>\r\n            </tr>\r\n          );\r\n        });\r\n        setMembers(\r\n          members.length ? (\r\n            members\r\n          ) : (\r\n            <tr>\r\n              <td>Brak członków</td>\r\n            </tr>\r\n          )\r\n        );\r\n      } catch (e) {\r\n        console.log(e);\r\n        printAlert(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  console.log(getCookie(\"jwt\"));\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <h1 className=\"text-center display-2\" style={{ paddingBottom: \"30px\" }}>\r\n        Panel grupy\r\n      </h1>\r\n      <h1\r\n        className=\"font-weight-bold display-3 text-center\"\r\n        style={{ paddingBottom: \"30px\" }}\r\n      >\r\n        {details.name}\r\n      </h1>\r\n      <div className=\"text-white bg-secondary\">\r\n        <div className=\"row \" style={{ padding: \"20px\" }}>\r\n          <div className=\"col\">\r\n            <AddRecon groupid={groupid} loggedUser={loggedUser} />\r\n            <FindUser groupid={groupid} />\r\n          </div>\r\n          <div\r\n            className=\"col\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              justifyContent: \"center\",\r\n              paddingTop: \"30px\",\r\n            }}\r\n          >\r\n            <h4>Bieżące rachunki</h4>\r\n            <p>(kliknij na rachunek abyz zobaczyć jego szczegóły)</p>\r\n            <table className=\"table table-info table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">tytuł</th>\r\n                  <th scope=\"col\">autor</th>\r\n                  <th scope=\"col\">termin</th>\r\n                  <th scope=\"col\">status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{recons}</tbody>\r\n            </table>\r\n            <br />\r\n            <h4>Członkowie</h4>\r\n            <table className=\"table table-info\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">imie</th>\r\n                  <th scope=\"col\">nazwisko</th>\r\n                  <th scope=\"col\">email</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{members}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-cols-3 mb-2\" style={{ padding: \"20px\" }}>\r\n          {foundUsers}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClusterDetails;\r\n","C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\components\\AddRecon.jsx",[],"C:\\Users\\Adrian Góral\\Desktop\\Bazy_Danych\\projekt\\IO_projekt\\client\\src\\routes\\ReconDetails.jsx",["115","116","117","118","119"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport { getCookie, printAlert } from \"../context/Functions\";\r\nimport { ReconsContext } from \"../context/ReconsContext\";\r\n\r\nconst ReckonDetails = () => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [debtor, setDebtor] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const [payments, setPayments] = useState([]);\r\n  const [paymentDate, setPaymentDate] = useState(\"\");\r\n  const { selectedRecon, groupMembers, setGroupMembers } =\r\n    useContext(ReconsContext);\r\n  const [currentRecon, setCurrentRecon] = useState(selectedRecon);\r\n\r\n  const { reckonId } = useParams();\r\n  //   const [loggedUser, setLoggedUser] = useState(\"\");\r\n\r\n  const changeToPaid = async (e, reckoningpositionid) => {\r\n    try {\r\n      const response = await ReconsFinder.put(\r\n        \"/reckonings/UpdateReckoningStatusView\",\r\n        {\r\n          reckoningpositionid,\r\n        },\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n\r\n      // console.log(response);\r\n      history.push(\"/\");\r\n      history.push(location);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const handleOnAddReckon = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const userResponse = await ReconsFinder.get(`/auth/logged`, {\r\n        headers: {\r\n          jwt: getCookie(\"jwt\"),\r\n        },\r\n      });\r\n      console.log(\r\n        \"userResponse: \",\r\n        userResponse,\r\n        \"currentRecon: \",\r\n        currentRecon,\r\n        currentRecon.userid\r\n      );\r\n      // if (userResponse.data.userid !== currentRecon.author_detail.userid) {\r\n      //   alert(\r\n      //     \"Nie możesz dodawać pozycji do rachunku nie będąc jego właścicielem!\"\r\n      //   );\r\n      //   return;\r\n      // }\r\n      const response = await ReconsFinder.post(\r\n        \"reckonings/reckoningPosition\",\r\n        {\r\n          name,\r\n          amount,\r\n          groupmemberid: debtor,\r\n          reckoningid: reckonId,\r\n          paymentdate: null,\r\n        },\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n\r\n      history.push(\"/\");\r\n      history.push(location);\r\n      console.log(response);\r\n    } catch (e) {\r\n      printAlert(e);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const responseUser = await ReconsFinder.get(\"auth/logged\", {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        });\r\n        setLoggedUser(responseUser.data);\r\n        const response = await ReconsFinder.get(\r\n          `reckonings/reckoningPosition/${reckonId}`,\r\n          {\r\n            headers: {\r\n              jwt: getCookie(\"jwt\"),\r\n            },\r\n          }\r\n        );\r\n        const reconResponse = await ReconsFinder.get(\r\n          `/reckonings/reckoning/${reckonId}`,\r\n          {\r\n            headers: {\r\n              jwt: getCookie(\"jwt\"),\r\n            },\r\n          }\r\n        );\r\n        !currentRecon && setCurrentRecon(reconResponse.data);\r\n        console.log(\"payments: \", response.data);\r\n        console.log(\"current recon: \", reconResponse.data);\r\n        setPayments(\r\n          response.data.map((payment) => {\r\n            return (\r\n              <tr key={payment.reckoningpositionid}>\r\n                <td>{payment.name}</td>\r\n                <td>{payment.author_detail.email}</td>\r\n                <td>{payment.amount}</td>\r\n                <td>\r\n                  {payment.paymentdate\r\n                    ? payment.paymentdate.split(\"T\", 1)\r\n                    : \"Nie opłacono\"}\r\n                </td>\r\n                <td>\r\n                  {payment.paymentdate ? (\r\n                    <span className=\"h5\" style={{ color: \"green\" }}>\r\n                      Zapłacono\r\n                    </span>\r\n                  ) : (\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-dark  btn-large btn-block\"\r\n                      onClick={(e) =>\r\n                        changeToPaid(e, payment.reckoningpositionid)\r\n                      }\r\n                    >\r\n                      Opłać\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            );\r\n          })\r\n        );\r\n\r\n        if (!groupMembers.length) {\r\n          const membersResponse = await ReconsFinder.get(\r\n            `/groups/group/${reconResponse.data?.groupid}`,\r\n            {\r\n              headers: {\r\n                jwt: getCookie(\"jwt\"),\r\n              },\r\n            }\r\n          );\r\n          setGroupMembers(\r\n            membersResponse.data.members.filter(\r\n              (member) => member.userid !== responseUser.data.userid\r\n            )\r\n          );\r\n          console.log(\r\n            \"available members: \",\r\n            membersResponse.data.members.filter(\r\n              (member) => member.userid !== responseUser.data.userid\r\n            )\r\n          );\r\n        }\r\n\r\n        // console.log(payments);\r\n      } catch (e) {\r\n        console.log(e);\r\n        printAlert(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"text-center display-2\" style={{ paddingBottom: \"30px\" }}>\r\n        <h1>Szczegóły rachunku</h1>\r\n        <h5>Tytuł: {currentRecon.name || \"brak\"}</h5>\r\n        <h5>właściciel: {currentRecon.author_detail?.email || \"brak\"}</h5>\r\n        <h5>\r\n          termin płatności: {currentRecon.deadline?.split(\"T\", 1) || \"brak\"}\r\n        </h5>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col mb-2 text-left\">\r\n          <form action=\"\" onSubmit={(e) => handleOnAddReckon(e)}>\r\n            <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Tytuł płatności</label>\r\n                <input\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  id=\"name\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"name\">Kwota</label>\r\n                <input\r\n                  value={amount}\r\n                  onChange={(e) => setAmount(e.target.value)}\r\n                  id=\"name\"\r\n                  type=\"number\"\r\n                  className=\"form-control\"\r\n                  min={0}\r\n                  required\r\n                />\r\n              </div>\r\n              {/* <div className=\"form-group\" style={{ marginRight: \"20px\" }}>\r\n                <p>termin płatności</p>\r\n                <input\r\n                  type=\"date\"\r\n                  id=\"start\"\r\n                  name=\"recon-start\"\r\n                  value={paymentDate}\r\n                  onChange={(e) => setPaymentDate(e.target.value)}\r\n                  min={new Date().toISOString().slice(0, 10)}\r\n                  max=\"2022-12-31\"\r\n                  required\r\n                ></input>\r\n              </div> */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"debtor\">Kogo obciążyć</label>\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"debtor\"\r\n                  onChange={(e) => setDebtor(e.target.value)}\r\n                  required\r\n                >\r\n                  <option value=\"\" disabled selected>\r\n                    Wybierz dłużnika\r\n                  </option>\r\n                  {groupMembers.length &&\r\n                    groupMembers.map((member) => (\r\n                      <option key={member.userid} value={member.userid}>\r\n                        {member.email}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Dodaj płatność do rachunku\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className=\"col\">\r\n          <table className=\"table table-warning table-hover\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Nazwa</th>\r\n                <th scope=\"col\">Dłużnik</th>\r\n                <th scope=\"col\">Kwota</th>\r\n                <th scope=\"col\">Data zapłaty</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{payments}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReckonDetails;\r\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"128","line":2,"column":35,"nodeType":"126","messageId":"127","endLine":2,"endColumn":44},{"ruleId":"124","severity":1,"message":"129","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":23},{"ruleId":"124","severity":1,"message":"130","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":16},{"ruleId":"124","severity":1,"message":"131","line":12,"column":9,"nodeType":"126","messageId":"127","endLine":12,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":27},{"ruleId":"124","severity":1,"message":"132","line":7,"column":11,"nodeType":"126","messageId":"127","endLine":7,"endColumn":18},{"ruleId":"124","severity":1,"message":"133","line":7,"column":20,"nodeType":"126","messageId":"127","endLine":7,"endColumn":28},{"ruleId":"124","severity":1,"message":"134","line":14,"column":10,"nodeType":"126","messageId":"127","endLine":14,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":14,"column":13,"nodeType":"137","endLine":14,"endColumn":17},{"ruleId":"138","severity":1,"message":"139","line":16,"column":9,"nodeType":"137","endLine":16,"endColumn":68},{"ruleId":"124","severity":1,"message":"140","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":6,"column":3,"nodeType":"126","messageId":"127","endLine":6,"endColumn":12},{"ruleId":"141","severity":1,"message":"142","line":59,"column":32,"nodeType":"143","messageId":"144","endLine":59,"endColumn":34},{"ruleId":"124","severity":1,"message":"134","line":13,"column":10,"nodeType":"126","messageId":"127","endLine":13,"endColumn":24},{"ruleId":"124","severity":1,"message":"145","line":13,"column":26,"nodeType":"126","messageId":"127","endLine":13,"endColumn":43},{"ruleId":"124","severity":1,"message":"146","line":2,"column":22,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"147","severity":1,"message":"148","line":79,"column":46,"nodeType":"149","messageId":"150","endLine":79,"endColumn":48},{"ruleId":"151","severity":1,"message":"152","line":110,"column":6,"nodeType":"153","endLine":110,"endColumn":8,"suggestions":"154"},{"ruleId":"124","severity":1,"message":"155","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":20},{"ruleId":"124","severity":1,"message":"156","line":16,"column":10,"nodeType":"126","messageId":"127","endLine":16,"endColumn":21},{"ruleId":"124","severity":1,"message":"157","line":16,"column":23,"nodeType":"126","messageId":"127","endLine":16,"endColumn":37},{"ruleId":"124","severity":1,"message":"158","line":26,"column":13,"nodeType":"126","messageId":"127","endLine":26,"endColumn":21},{"ruleId":"151","severity":1,"message":"159","line":180,"column":6,"nodeType":"153","endLine":180,"endColumn":8,"suggestions":"160"},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'ReconsContext' is defined but never used.","'FindUser' is defined but never used.","'location' is assigned a value but never used.","'idHotel' is assigned a value but never used.","'idOption' is assigned a value but never used.","'selectedClient' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setSelectedClient' is assigned a value but never used.","'useLocation' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'groupid', 'history', 'setGroupMembers', and 'setSelectedRecon'. Either include them or remove the dependency array.","ArrayExpression",["163"],"'loggedUser' is assigned a value but never used.","'paymentDate' is assigned a value but never used.","'setPaymentDate' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'changeToPaid', 'currentRecon', 'groupMembers.length', 'reckonId', and 'setGroupMembers'. Either include them or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [groupid, history, setGroupMembers, setSelectedRecon]",{"range":"169","text":"170"},"Update the dependencies array to be: [changeToPaid, currentRecon, groupMembers.length, reckonId, setGroupMembers]",{"range":"171","text":"172"},[3447,3449],"[groupid, history, setGroupMembers, setSelectedRecon]",[5445,5447],"[changeToPaid, currentRecon, groupMembers.length, reckonId, setGroupMembers]"]