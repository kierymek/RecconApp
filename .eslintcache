[{"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\index.js":"1","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\App.jsx":"2","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\context\\ReconsContext.js":"3","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\Home.jsx":"4","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\RegisterPage.jsx":"5","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\UserPanel.jsx":"6","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\apis\\ReconsFinder.js":"7","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Header.jsx":"8","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\NoAccount.jsx":"9","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Cluster.jsx":"10","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\LogUser.jsx":"11","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Register.jsx":"12","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\FindUser.jsx":"13","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Navbar.jsx":"14","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\ClusterPanel.jsx":"15","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\EditUser.jsx":"16","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\ClusterDetails.jsx":"17","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\context\\Functions.js":"18","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\AddCluster.jsx":"19","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\AddRecon.jsx":"20","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\ReconDetails.jsx":"21"},{"size":146,"mtime":1620331000231,"results":"22","hashOfConfig":"23"},{"size":1361,"mtime":1621789214406,"results":"24","hashOfConfig":"23"},{"size":1221,"mtime":1620331000183,"results":"25","hashOfConfig":"23"},{"size":464,"mtime":1621716679059,"results":"26","hashOfConfig":"23"},{"size":217,"mtime":1620470991229,"results":"27","hashOfConfig":"23"},{"size":6444,"mtime":1622908772065,"results":"28","hashOfConfig":"23"},{"size":106,"mtime":1621720088473,"results":"29","hashOfConfig":"23"},{"size":513,"mtime":1621789214606,"results":"30","hashOfConfig":"23"},{"size":638,"mtime":1620331000156,"results":"31","hashOfConfig":"23"},{"size":1411,"mtime":1622908595649,"results":"32","hashOfConfig":"23"},{"size":2550,"mtime":1621789214644,"results":"33","hashOfConfig":"23"},{"size":2965,"mtime":1621789214692,"results":"34","hashOfConfig":"23"},{"size":4821,"mtime":1622908772036,"results":"35","hashOfConfig":"23"},{"size":2219,"mtime":1621791923039,"results":"36","hashOfConfig":"23"},{"size":1501,"mtime":1622905179905,"results":"37","hashOfConfig":"23"},{"size":3878,"mtime":1621791978283,"results":"38","hashOfConfig":"23"},{"size":3483,"mtime":1622912452136,"results":"39","hashOfConfig":"23"},{"size":1102,"mtime":1621789214730,"results":"40","hashOfConfig":"23"},{"size":2686,"mtime":1622905179820,"results":"41","hashOfConfig":"23"},{"size":2274,"mtime":1622908255158,"results":"42","hashOfConfig":"23"},{"size":3920,"mtime":1622914501580,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"htpcci",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\index.js",[],["94","95"],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\App.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\context\\ReconsContext.js",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\Home.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\RegisterPage.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\UserPanel.jsx",["96","97","98","99","100"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport { ReconsContext } from \"../context/ReconsContext\";\r\nimport { getCookie, printAlert } from \"../context/Functions\";\r\nimport Cluster from \"../components/Cluster\";\r\nimport FindUser from \"../components/FindUser\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nconst UserPanel = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n  const [reckonings, setReckonings] = useState(\"\");\r\n  const [groups, setGroups] = useState(\"\");\r\n  //   const { idClient } = useParams();\r\n  //   const { selectedClient, setSelectedClient } = useContext(ReconsContext);\r\n  //   const { selectedReservations, setSelectedReservations } = useContext(\r\n  //     ReconsContext\r\n  //   );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ReconsFinder.get(\"auth/logged\", {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        });\r\n        console.log(\"jwt: \", getCookie(\"jwt\"));\r\n        const reckoningsResponse = await ReconsFinder.get(\r\n          \"reckonings/reckoningPositionsByUser/2\",\r\n          {\r\n            headers: {\r\n              jwt: getCookie(\"jwt\"),\r\n            },\r\n          }\r\n        );\r\n        console.log(response.data);\r\n        console.log(reckoningsResponse.data);\r\n        setLoggedUser(response.data);\r\n        setReckonings(reckoningsResponse.data);\r\n\r\n        const groupsResponse = await ReconsFinder.get(\r\n          `/groups/groupinfo/${response.data.userid}`,\r\n          {\r\n            headers: {\r\n              jwt: getCookie(\"jwt\"),\r\n            },\r\n          }\r\n        );\r\n        console.log(groupsResponse);\r\n        setGroups(groupsResponse.data);\r\n      } catch (e) {\r\n        printAlert(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  //   const handleDelete = async (e, id) => {\r\n  //     try {\r\n  //       const response = await ReconsFinder.delete(`/reservations/${id}`);\r\n  //       setSelectedReservations(\r\n  //         selectedReservations.filter((reservation) => {\r\n  //           return reservation.id_rezerwacja !== id;\r\n  //         })\r\n  //       );\r\n  //     } catch (err) {\r\n  //       console.log(err);\r\n  //     }\r\n  //   };\r\n\r\n  const handleEdit = async (e) => {\r\n    try {\r\n      history.push(\"/EditUser\");\r\n    } catch (err) {\r\n      printAlert(err);\r\n    }\r\n  };\r\n\r\n  let income = 0;\r\n  let outcome = 0;\r\n  const reconingIncome = (reckonings.length &&\r\n    reckonings.map((recon) => {\r\n      income += recon.amount;\r\n      return (\r\n        <tr key={recon.reckoningpositionid}>\r\n          <td>{recon.name}</td>\r\n          <td>{recon.amount}</td>\r\n          <td>{recon.paymentdate}</td>\r\n        </tr>\r\n      );\r\n    })) || (\r\n    <tr>\r\n      <td>Brak rachunk√≥w</td>\r\n    </tr>\r\n  );\r\n  const reconingsOutcome = (reckonings.length &&\r\n    reckonings.map((recon) => {\r\n      outcome += recon.amount;\r\n      return (\r\n        <tr key={recon.reckoningpositionid}>\r\n          <td>{recon.name}</td>\r\n          <td>{recon.amount}</td>\r\n          <td>{recon.paymentdate}</td>\r\n        </tr>\r\n      );\r\n    })) || (\r\n    <tr>\r\n      <td>Brak rachunk√≥w</td>\r\n    </tr>\r\n  );\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      {\r\n        <>\r\n          <h1\r\n            className=\"text-center display-2\"\r\n            style={{ paddingBottom: \"30px\" }}\r\n          >\r\n            Panel U≈ºytkownika\r\n          </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <table className=\"table caption-top table-secondary\">\r\n                <caption>\r\n                  <div classname=\"row\">\r\n                    <span>Dane u≈ºytkownika</span>\r\n                    <button\r\n                      onClick={(e) => handleEdit(e)}\r\n                      className=\"btn btn-primary\"\r\n                      style={{ float: \"right\" }}\r\n                    >\r\n                      Edytuj dane\r\n                    </button>\r\n                  </div>\r\n                </caption>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Imiƒô</th>\r\n                    <td>{loggedUser.firstname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">Nazwisko</th>\r\n                    <td>{loggedUser.lastname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">User ID</th>\r\n                    <td>{loggedUser.userid}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">Email</th>\r\n                    <td>{loggedUser.email}</td>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <h3>Rachunki gdzie jeste≈õmy d≈Çu≈ºnikiem</h3>\r\n              <table className=\"table table-primary table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">tytu≈Ç</th>\r\n                    <th scope=\"col\">kwota</th>\r\n                    <th scope=\"col\">data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {reconingsOutcome}\r\n                  <tr>\r\n                    <td>{\"bilans\"}</td>\r\n                    <td>{outcome}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <h3>Rachunki kt√≥rych jeste≈õmy w≈Ça≈õcicielem</h3>\r\n              <table className=\"table table-primary table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">tytu≈Ç</th>\r\n                    <th scope=\"col\">kwota</th>\r\n                    <th scope=\"col\">data</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {reconingIncome}\r\n                  <tr>\r\n                    <td>{\"bilans\"}</td>\r\n                    <td>{income}</td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </>\r\n      }\r\n\r\n      <div>\r\n        <Cluster clusters={groups} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPanel;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\apis\\ReconsFinder.js",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Header.jsx",["101"],"import React from \"react\";\r\nimport logo from \"../images/cash.jpg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"font-weight-bold display-3 text-center\">Reckonings App</h1>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          paddingBottom: \"30px\",\r\n        }}\r\n      >\r\n        <img src={logo} style={{ width: \"20%\", height: \"auto\" }} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\NoAccount.jsx",["102"],"import React from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst NoAccount = () => {\r\n    const history = useHistory();\r\n\r\n    const handleNoAccout = async (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/register\");        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1></h1><br/>\r\n            <div>\r\n                <h2>Nie masz jeszcze konta?</h2> <br/>\r\n                <form action=\"\" onSubmit={handleNoAccout} >\r\n                <button type=\"submit\" className=\"btn btn-danger\">Rejestracja</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoAccount;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Cluster.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\LogUser.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Register.jsx",["103","104","105","106"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport {printAlert} from \"../context/Functions\"; \r\n\r\nconst Register = () => {\r\n  const { idHotel, idOption } = useParams();\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await ReconsFinder.post(\"auth/register\", {\r\n        firstname: name,\r\n        lastname: surname,\r\n        password,\r\n        email,\r\n      });\r\n      console.log(response.data);\r\n      setSelectedClient(response.data.data);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      printAlert(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"font-weight-bold display-3 text-center\">\r\n        Panel rejestracji\r\n      </h1>\r\n      <br />\r\n      <div className=\"mb-2 text-left\">\r\n        <form action=\"\" onSubmit={handleRegister}>\r\n          <h2>Nowy u≈ºytkownik</h2> <br />\r\n          <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Imiƒô</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Nazwisko</label>\r\n              <input\r\n                value={surname}\r\n                onChange={(e) => setSurname(e.target.value)}\r\n                id=\"surname\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">email</label>\r\n              <input\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                id=\"email\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Has≈Ço</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                id=\"password\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-danger\">\r\n            Zarejestruj\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\FindUser.jsx",["107","108","109","110"],"import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { /*useHistory,*/ useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport { getCookie } from \"../context/Functions\";\r\n//const history = useHistory();\r\n\r\nconst FindUser = ({ groupid }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstname] = useState(\"\");\r\n  const [lastName, setLastname] = useState(\"\");\r\n  const [users, setUsers] = useState(null);\r\n\r\n  async function addUserToCluster(user) {\r\n    console.log(user);\r\n    const addUserResponse = await ReconsFinder.post(\r\n      \"groups/groupmembers\",\r\n      {\r\n        groupid,\r\n        userid: user.userid,\r\n      },\r\n      {\r\n        headers: {\r\n          jwt: getCookie(\"jwt\"),\r\n        },\r\n      }\r\n    );\r\n    console.log(\"added user: \", addUserResponse);\r\n    //groupId\r\n    try {\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert(\"B≈Çad\");\r\n    }\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    try {\r\n      const response = await ReconsFinder.get(\r\n        `/auth/search?email=${email}&firstname=${firstName}&lastname=${lastName}`,\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      if (response.data.length == 0) alert(\"Brak u≈ºytkownika\");\r\n      setUsers(\r\n        response.data.map((user) => {\r\n          return (\r\n            <div\r\n              className=\"col-sm\"\r\n              key={user.userid}\r\n              style={{ maxWidth: \"30%\" }}\r\n            >\r\n              <table className=\"table caption-top table-secondary\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>Imiƒô:</td>\r\n                    <td>{user.firstname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Nazwisko:</td>\r\n                    <td>{user.lastname}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>Email:</td>\r\n                    <td>{user.email}</td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr>\r\n                    <td>\r\n                      <button\r\n                        type=\"submit\"\r\n                        onClick={() => addUserToCluster(user)}\r\n                        className=\"btn btn-secondary\"\r\n                      >\r\n                        Dodaj do grupy\r\n                      </button>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n      alert(\"Nie znaleziono u≈ºytkownika\");\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <br />\r\n      <h1>Wyszukaj U≈ºytkownika</h1>\r\n      <br />\r\n      <div style={{ width: \"60%\" }}>\r\n        <form action=\"\" onSubmit={handleSubmit}>\r\n          <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n            <div className=\"form-group\">\r\n              {\r\n                <input\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  size=\"50\"\r\n                  id=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Wyszukaj po emailu\"\r\n                />\r\n              }\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {\r\n                <input\r\n                  value={firstName}\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                  size=\"50\"\r\n                  id=\"firstName\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Wyszukaj po imieniu\"\r\n                />\r\n              }\r\n            </div>\r\n            <div className=\"form-group\">\r\n              {\r\n                <input\r\n                  value={lastName}\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                  size=\"50\"\r\n                  id=\"lastName\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Wyszukaj po nazwisku\"\r\n                />\r\n              }\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Szukaj\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-warning\"\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n              setUsers(null);\r\n            }}\r\n          >\r\n            Ukryj wyszukanych\r\n          </button>\r\n        </form>\r\n        <p></p> {/*To nie powinno tak byƒá*/}\r\n      </div>\r\n      <div className=\"row row-cols-3 mb-2\">{users}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUser;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Navbar.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\ClusterPanel.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\EditUser.jsx",["111","112"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport { getCookie, printAlert } from \"../context/Functions\";\r\nimport Navbar from \"../components/Navbar\";\r\nconst EditUser = () => {\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n  //   const { idClient } = useParams();\r\n  //   const { selectedClient, setSelectedClient } = useContext(ReconsContext);\r\n  //   const { selectedReservations, setSelectedReservations } = useContext(\r\n  //     ReconsContext\r\n  //   );\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await ReconsFinder.get(\"/logged\", {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        });\r\n        console.log(response.data);\r\n        setName(response.data.firstname);\r\n        setSurname(response.data.lastname);\r\n        setEmail(response.data.email);\r\n      } catch (e) {\r\n        console.log(e);\r\n        printAlert(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleUpdate = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await ReconsFinder.put(\r\n        \"auth/logged\",\r\n        {\r\n          firstname: name,\r\n          lastname: surname,\r\n          password,\r\n          email,\r\n        },\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n      console.log(response.data);\r\n      document.cookie = `jwt=${response.data.jwt}`;\r\n      history.push(\"/userPanel\");\r\n    } catch (e) {\r\n      printAlert(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <h1 className=\"font-weight-bold display-3 text-center\">\r\n        Edytuj dane u≈ºytkownika\r\n      </h1>\r\n      <br />\r\n      <div className=\"mb-2 text-left\">\r\n        <form action=\"\" onSubmit={handleUpdate}>\r\n          <h2>Wprowad≈∫ nowe dane u≈ºytkownika</h2> <br />\r\n          <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Imiƒô</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"surname\">Nazwisko</label>\r\n              <input\r\n                value={surname}\r\n                onChange={(e) => setSurname(e.target.value)}\r\n                id=\"surname\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">email</label>\r\n              <input\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                id=\"email\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Has≈Ço</label>\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                id=\"password\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-danger\">\r\n            Edytuj dane\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditUser;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\ClusterDetails.jsx",["113","114","115","116"],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\context\\Functions.js",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\AddCluster.jsx",["117","118"],"import React, { useContext, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport { getCookie, printAlert } from \"../context/Functions\";\r\n\r\nconst AddCluster = ({ loggedUser }) => {\r\n  const history = useHistory();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  // const [startDate, setStartDate] = useState(\"2021-06-05\");\r\n\r\n  const handleAddCluster = async (e) => {\r\n    console.log(\"Jebaƒá IOIOIIIOIOIOI\");\r\n    e.preventDefault();\r\n    try {\r\n      // console.log(\"start date: \", startDate);\r\n      const createClusterResponse = await ReconsFinder.post(\r\n        \"groups/group\",\r\n        {\r\n          name,\r\n          // startdate: startDate + \"T00:00:00Z\",\r\n        },\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n      console.log(createClusterResponse.data);\r\n      const addUserResponse = await ReconsFinder.post(\r\n        \"groups/groupmembers\",\r\n        {\r\n          groupid: createClusterResponse.data.groupid,\r\n          userid: loggedUser.userid,\r\n        },\r\n        {\r\n          headers: {\r\n            jwt: getCookie(\"jwt\"),\r\n          },\r\n        }\r\n      );\r\n      console.log(addUserResponse.data);\r\n      history.push(\"/\");\r\n      history.push(\"/ClusterPanel\");\r\n    } catch (e) {\r\n      printAlert(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <div className=\"mb-2 text-left\">\r\n        <form action=\"\" onSubmit={handleAddCluster}>\r\n          <h2>Nowa grupa</h2> <br />\r\n          <div className=\"form-col\" style={{ maxWidth: \"250px\" }}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Nazwa grupy</label>\r\n              <input\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                id=\"name\"\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                required\r\n              />\r\n            </div>\r\n            {/* <div className=\"form-group\" style={{ marginRight: \"20px\" }}>\r\n              <p>Data utworzenia</p>\r\n              <input\r\n                type=\"date\"\r\n                id=\"start\"\r\n                name=\"trip-start\"\r\n                value={startDate}\r\n                onChange={(e) => setStartDate(e.target.value)}\r\n                min={new Date().toISOString().slice(0, 10)}\r\n                max=\"2022-12-31\"\r\n              ></input>\r\n            </div> */}\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-success\">\r\n            Utw√≥rz grupƒô\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddCluster;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\AddRecon.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\ReconDetails.jsx",["119","120","121"],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"130","line":2,"column":35,"nodeType":"128","messageId":"129","endLine":2,"endColumn":44},{"ruleId":"126","severity":1,"message":"131","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":23},{"ruleId":"126","severity":1,"message":"132","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":16},{"ruleId":"126","severity":1,"message":"133","line":12,"column":9,"nodeType":"128","messageId":"129","endLine":12,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":16,"column":9,"nodeType":"136","endLine":16,"endColumn":68},{"ruleId":"137","severity":1,"message":"138","line":14,"column":13,"nodeType":"136","endLine":14,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"139","line":7,"column":11,"nodeType":"128","messageId":"129","endLine":7,"endColumn":18},{"ruleId":"126","severity":1,"message":"140","line":7,"column":20,"nodeType":"128","messageId":"129","endLine":7,"endColumn":28},{"ruleId":"126","severity":1,"message":"141","line":14,"column":10,"nodeType":"128","messageId":"129","endLine":14,"endColumn":24},{"ruleId":"126","severity":1,"message":"142","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":2,"column":17,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"126","severity":1,"message":"130","line":3,"column":26,"nodeType":"128","messageId":"129","endLine":3,"endColumn":35},{"ruleId":"143","severity":1,"message":"144","line":50,"column":32,"nodeType":"145","messageId":"146","endLine":50,"endColumn":34},{"ruleId":"126","severity":1,"message":"141","line":13,"column":10,"nodeType":"128","messageId":"129","endLine":13,"endColumn":24},{"ruleId":"126","severity":1,"message":"147","line":13,"column":26,"nodeType":"128","messageId":"129","endLine":13,"endColumn":43},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"148","line":11,"column":9,"nodeType":"128","messageId":"129","endLine":11,"endColumn":16},{"ruleId":"126","severity":1,"message":"133","line":12,"column":9,"nodeType":"128","messageId":"129","endLine":12,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":73,"column":6,"nodeType":"151","endLine":73,"endColumn":8,"suggestions":"152"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"130","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":31},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"148","line":7,"column":9,"nodeType":"128","messageId":"129","endLine":7,"endColumn":16},{"ruleId":"126","severity":1,"message":"153","line":13,"column":11,"nodeType":"128","messageId":"129","endLine":13,"endColumn":19},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'ReconsContext' is defined but never used.","'FindUser' is defined but never used.","'location' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'idHotel' is assigned a value but never used.","'idOption' is assigned a value but never used.","'selectedClient' is assigned a value but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setSelectedClient' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'groupid' and 'members'. Either include them or remove the dependency array.","ArrayExpression",["156"],"'reckonId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},"Update the dependencies array to be: [groupid, members]",{"range":"159","text":"160"},[2337,2339],"[groupid, members]"]