[{"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\index.js":"1","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\App.jsx":"2","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\context\\ReconsContext.js":"3","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\UserPanel.jsx":"4","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\Register.jsx":"5","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\Home.jsx":"6","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\apis\\ReconsFinder.js":"7","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Header.jsx":"8","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\LogUser.jsx":"9","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\NoAccount.jsx":"10","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\FindUser.jsx":"11","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Cluster.jsx":"12","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\SingleUser.jsx":"13"},{"size":146,"mtime":1620331000231,"results":"14","hashOfConfig":"15"},{"size":826,"mtime":1620331000028,"results":"16","hashOfConfig":"15"},{"size":1221,"mtime":1620331000183,"results":"17","hashOfConfig":"15"},{"size":5923,"mtime":1620405644340,"results":"18","hashOfConfig":"15"},{"size":3888,"mtime":1620331000258,"results":"19","hashOfConfig":"15"},{"size":660,"mtime":1620410078711,"results":"20","hashOfConfig":"15"},{"size":111,"mtime":1620331000054,"results":"21","hashOfConfig":"15"},{"size":472,"mtime":1620331000090,"results":"22","hashOfConfig":"15"},{"size":3151,"mtime":1620331000131,"results":"23","hashOfConfig":"15"},{"size":638,"mtime":1620331000156,"results":"24","hashOfConfig":"15"},{"size":3603,"mtime":1620412867057,"results":"25","hashOfConfig":"15"},{"size":1917,"mtime":1620413644489,"results":"26","hashOfConfig":"15"},{"size":481,"mtime":1620412595116,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"htpcci",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\index.js",[],["60","61"],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\App.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\context\\ReconsContext.js",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\UserPanel.jsx",["62","63","64","65","66"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useHistory, useLocation, useParams } from \"react-router-dom\";\r\nimport ReconsFinder from \"../apis/ReconsFinder\";\r\nimport { ReconsContext } from \"../context/ReconsContext\";\r\n\r\nconst UserPanel = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const [loggedUser, setLoggedUser] = useState(\"\");\r\n\r\n//   const { idClient } = useParams();\r\n//   const { selectedClient, setSelectedClient } = useContext(ReconsContext);\r\n//   const { selectedReservations, setSelectedReservations } = useContext(\r\n//     ReconsContext\r\n//   );\r\n\r\n    function getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);\r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) === ' ') {\r\n            c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) === 0) {\r\n            return c.substring(name.length, c.length);\r\n        }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                // const authHeader = initAuthHeaders();\r\n                console.log(\"userpanel getcookie (jwt): \", getCookie(\"jwt\"));\r\n                const response = await ReconsFinder.get(\"/logged\", {\r\n                    headers : {\r\n                        \"jwt\" : getCookie(\"jwt\"),\r\n                    },\r\n                    COOKIES : {\r\n                        jwt : getCookie(\"jwt\")\r\n                    }\r\n                });\r\n                console.log(response.data);\r\n                setLoggedUser(response.data);\r\n            } catch (e) {\r\n                console.log(e);\r\n                if (e.response !== undefined) {\r\n                    console.log(e.response);\r\n                    const responseText = JSON.parse(e.response.request.responseText);\r\n                    let response = \"\";\r\n                    for (const [key, value] of Object.entries(responseText)) {\r\n                        response += \"input name -> \" + key + \"\\ninput errors:  \";\r\n                        if (typeof value === \"string\") {\r\n                            response += value + \"\\n\";\r\n                            continue;\r\n                        }\r\n                        for (const message of Object.values(value)) {\r\n                            response += message + \"\\n\";\r\n                        }\r\n                        response += \"\\n\";\r\n                    }\r\n                    alert(response);\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [])\r\n//   const handleDelete = async (e, id) => {\r\n//     try {\r\n//       const response = await ReconsFinder.delete(`/reservations/${id}`);\r\n//       setSelectedReservations(\r\n//         selectedReservations.filter((reservation) => {\r\n//           return reservation.id_rezerwacja !== id;\r\n//         })\r\n//       );\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   };\r\n\r\n  return (\r\n    <div>\r\n      {<>\r\n          <h1\r\n            className=\"text-center display-2\"\r\n            style={{ paddingBottom: \"30px\" }}\r\n          >\r\n            Panel Użytkownika\r\n          </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <table className=\"table caption-top table-secondary\">\r\n                <caption>Dane użytkownika</caption>\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">Imię</th>\r\n                    <td>{loggedUser.first_name}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">Nazwisko</th>\r\n                    <td>{loggedUser.last_name}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">Username</th>\r\n                    <td>{loggedUser.username}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <th scope=\"col\">Email</th>\r\n                    <td>{loggedUser.email}</td>\r\n                  </tr>\r\n                </thead>\r\n              </table>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <h3>Rachunki</h3>\r\n              <table className=\"table table-primary table-hover\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\">id</th>\r\n                    <th scope=\"col\">użytkownik</th>\r\n                    <th scope=\"col\">grupa</th>\r\n                    <th scope=\"col\">bilans</th>\r\n                    <th scope=\"col\">zapłacono</th>\r\n                    <th scope=\"col\">Zmień status</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {/* {selectedReservations && selectedReservations.map((reservation) => {\r\n                                    return (\r\n                                        \r\n                                        <tr key={reservation.id_rezerwacja}>\r\n                                            <td>{reservation.id_rezerwacja}</td>\r\n                                            <td>{reservation.nazwa}</td>\r\n                                            <td>{reservation.rodzaj}</td>\r\n                                            <td>{reservation.zameldowanie}</td>\r\n                                            <td>{reservation.wymeldowanie}</td>\r\n                                            <td><button onClick={(e) => handleDelete(e, reservation.id_rezerwacja)} className=\"btn btn-secondary\">Anuluj</button></td>\r\n                                        </tr>\r\n                                        \r\n                                        \r\n                                    )\r\n                                })} */}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPanel;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\Register.jsx",["67","68","69","70"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport HotelFinder from '../apis/ReconsFinder';\r\n\r\nconst Register = () => {\r\n    const {idHotel, idOption} = useParams();\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"łysa pała 69\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [selectedClient, setSelectedClient] = useState(null);\r\n\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await HotelFinder.post(\"register\", {\r\n                first_name : name,\r\n                last_name : surname,\r\n                username : nickname,\r\n                password,\r\n                email,\r\n            });\r\n            console.log(response.data);\r\n            setSelectedClient(response.data.data);\r\n            history.push(\"/\");\r\n        } catch (e) {\r\n            console.log(e);\r\n            if (e.response.data !== undefined) {\r\n                console.log(e.response);\r\n                const responseText = JSON.parse(e.response.request.responseText);\r\n                let response = \"\";\r\n                for (const [key, value] of Object.entries(responseText)) {\r\n                    response += \"input name -> \" + key + \"\\ninput errors:  \";\r\n                    for (const message of Object.values(value)) {\r\n                        response += message + \"\\n\";\r\n                    }\r\n                    response += \"\\n\";\r\n                }\r\n                alert(response);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"font-weight-bold display-3 text-center\">Panel rejestracji</h1>\r\n            <br/>\r\n            <div className=\"mb-2 text-left\">\r\n                <form action=\"\" onSubmit={handleRegister}>\r\n                    <h2>Nowy użytkownik</h2> <br/>\r\n                    <div className=\"form-col\" style={{maxWidth:\"250px\"}}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"name\">Imię</label>\r\n                            <input value={name} onChange={e => setName(e.target.value)} id=\"name\" type=\"text\" className=\"form-control\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"surname\">Nazwisko</label>\r\n                            <input value={surname} onChange={e => setSurname(e.target.value)} id=\"surname\" className=\"form-control\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"nickname\">username</label>\r\n                            <input value={nickname} onChange={e => setNickname(e.target.value)} id=\"nickname\" className=\"form-control\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">email</label>\r\n                            <input value={email} onChange={e => setEmail(e.target.value)} id=\"email\" className=\"form-control\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password\">Hasło</label>\r\n                            <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} id=\"password\" className=\"form-control\" required/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" className=\"btn btn-danger\">Zarejestruj</button>\r\n                </form>\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Register\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\routes\\Home.jsx",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\apis\\ReconsFinder.js",[],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Header.jsx",["71"],"import React from 'react'\r\nimport logo from '../images/cash.jpg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"font-weight-bold display-3 text-center\">Reckonings App</h1>\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center', paddingBottom : '30px'}}>\r\n                <img src={logo} style={{width: '20%', height: 'auto'}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\LogUser.jsx",["72","73"],"import React, { useContext, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport ReconsFinder from '../apis/ReconsFinder';\r\n\r\nconst LogUser = () => {\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await ReconsFinder.post(\"login\", {\r\n                password,\r\n                username : username,\r\n            });\r\n            console.log(response);\r\n            document.cookie = `jwt=${response.data.jwt}`;\r\n            // setSelectedClient(response.data.data);\r\n            console.log(document.cookie);\r\n            history.push(\"userPanel\");\r\n        } catch (e) {\r\n            console.log(e);\r\n            if (e.response !== undefined) {\r\n                console.log(e.response);\r\n                const responseText = JSON.parse(e.response.request.responseText);\r\n                let response = \"\";\r\n                for (const [key, value] of Object.entries(responseText)) {\r\n                    response += \"input name -> \" + key + \"\\ninput errors:  \";\r\n\r\n                    for (const message of Object.values(value)) {\r\n                        response += message + \"\\n\";\r\n                    }\r\n                    response += \"\\n\";\r\n                }\r\n                alert(response);\r\n            }\r\n        }\r\n        // try {\r\n        //     const response = await ReconsFinder.get(`/clients/login/${nickname}/${password}`);\r\n        //     if (response.data.status === \"success\") {\r\n        //         history.push(`/clients/${response.data.data.client.id_klient}/reservations`);\r\n        //     } else {\r\n        //         alert(\"No such a user! Wrong login or password!\")\r\n        //     }\r\n        // } catch (e) {\r\n        //     console.log(e);\r\n        //     // alert(\"No such a user! Wrong login or password!\")\r\n        // }\r\n\r\n        // const response = await ReconsFinder.get(\"logged\");\r\n        // console.log(\"Loguser response: \", response);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Panel logowania</h1><br/>\r\n            <div style={{ width : \"60%\"}}>\r\n                <h4 style={{ marginBottom : \"20px\"}}>Istniejący użytkownik</h4>\r\n                <form action=\"\" onSubmit={handleSubmit} >\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"nickname\">username</label>\r\n                    <input value={username} onChange={e => setUsername(e.target.value)} size=\"50\" id=\"username\" className=\"form-control\" required/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\">Hasło</label>\r\n                    <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} size=\"50\" id=\"password\" className=\"form-control\" required/>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\">zaloguj się</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogUser\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\NoAccount.jsx",["74"],"import React from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst NoAccount = () => {\r\n    const history = useHistory();\r\n\r\n    const handleNoAccout = async (e) => {\r\n        e.preventDefault();\r\n        history.push(\"/register\");        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1></h1><br/>\r\n            <div>\r\n                <h2>Nie masz jeszcze konta?</h2> <br/>\r\n                <form action=\"\" onSubmit={handleNoAccout} >\r\n                <button type=\"submit\" className=\"btn btn-danger\">Rejestracja</button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoAccount;\r\n","D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\FindUser.jsx",["75","76","77"],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\Cluster.jsx",["78","79","80","81","82"],"D:\\Projects\\6th semester\\IO\\ReckonApp\\src\\components\\SingleUser.jsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":27},{"ruleId":"87","severity":1,"message":"91","line":2,"column":35,"nodeType":"89","messageId":"90","endLine":2,"endColumn":44},{"ruleId":"87","severity":1,"message":"92","line":4,"column":10,"nodeType":"89","messageId":"90","endLine":4,"endColumn":23},{"ruleId":"87","severity":1,"message":"93","line":7,"column":9,"nodeType":"89","messageId":"90","endLine":7,"endColumn":16},{"ruleId":"87","severity":1,"message":"94","line":8,"column":9,"nodeType":"89","messageId":"90","endLine":8,"endColumn":17},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":27},{"ruleId":"87","severity":1,"message":"95","line":6,"column":12,"nodeType":"89","messageId":"90","endLine":6,"endColumn":19},{"ruleId":"87","severity":1,"message":"96","line":6,"column":21,"nodeType":"89","messageId":"90","endLine":6,"endColumn":29},{"ruleId":"87","severity":1,"message":"97","line":14,"column":12,"nodeType":"89","messageId":"90","endLine":14,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":9,"column":17,"nodeType":"100","endLine":9,"endColumn":73},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":27},{"ruleId":"87","severity":1,"message":"91","line":2,"column":22,"nodeType":"89","messageId":"90","endLine":2,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":14,"column":13,"nodeType":"100","endLine":14,"endColumn":17},{"ruleId":"87","severity":1,"message":"103","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"88","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":27},{"ruleId":"87","severity":1,"message":"104","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":20},{"ruleId":"87","severity":1,"message":"88","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":27},{"ruleId":"87","severity":1,"message":"105","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":16},{"ruleId":"87","severity":1,"message":"106","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":18},{"ruleId":"87","severity":1,"message":"107","line":6,"column":12,"nodeType":"89","messageId":"90","endLine":6,"endColumn":17},{"ruleId":"87","severity":1,"message":"108","line":16,"column":11,"nodeType":"89","messageId":"90","endLine":16,"endColumn":18},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","'ReconsContext' is defined but never used.","'history' is assigned a value but never used.","'location' is assigned a value but never used.","'idHotel' is assigned a value but never used.","'idOption' is assigned a value but never used.","'selectedClient' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'axios' is defined but never used.","'ReconsFinder' is defined but never used.","'FindUser' is defined but never used.","'SingleUser' is defined but never used.","'users' is assigned a value but never used.","'getData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]